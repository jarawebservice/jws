@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,700);*{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;color:#222}body{font-size:1rem;font-family:"Open Sans",Arial;background:#f9f9f9}.about-us{margin:4em auto;width:1100px;max-width:90%}.about-us aside ul::after,.about-us::after{clear:both;content:"";display:table}@media only screen and (min-width:1000px){.about-us article,.about-us aside{float:left;width:47.5%}.about-us article{margin-right:5%}}.about-us article h2{margin:0;font-size:40px;font-weight:300;color:#308fc3}.about-us article p{margin-bottom:2em;font-size:16px;line-height:28px;font-weight:300;color:#676767}.about-us aside ul{margin:0;padding:0;list-style:none}.about-us aside ul li{display:table;width:100%;height:170px}@media only screen and (min-width:1000px){.about-us aside ul li{float:left;width:33.33333%}}.about-us aside ul li:first-child{background-color:#afce44}.about-us aside ul li:nth-child(2){background-color:#35b8e4}.about-us aside ul li:nth-child(3){background-color:#308fc3}.about-us aside ul li h3{display:table-cell;vertical-align:middle;text-align:center}.about-us aside ul li h3 span{display:block;color:#fff}.about-us aside ul li h3 span:first-child{font-family:'Roboto',sans-serif;font-size:60px;font-weight:700}.about-us aside ul li h3 span:nth-child(2){font-size:12px;font-weight:600;text-transform:uppercase}.group:after{content:"";display:table;clear:both}body a{text-decoration:none}body .team-treehouse h1,body .team-treehouse h2{text-align:center}body .team-treehouse h2{font-weight:400}.pieChart{width:25.5em;margin:0 auto;padding-top:1em}.pie,.slice,.slice span{width:12.5em;height:12.5em}.pie{float:left;position:relative}.pie::before{content:"";display:block;position:absolute;z-index:1;width:7.5em;height:7.5em;background:#f9f9f9;border-radius:50%;top:2.5em;left:2.5em}.slice,.slice span{position:absolute;clip:rect(0,12.5em,12.5em,6.25em)}.slice{-webkit-animation:bake-pie 1s;animation:bake-pie 1s}.slice span{display:block;top:0;left:0;background-color:#000;border-radius:50%}.legend{width:13em;padding-left:1em;float:left}.legend ul{list-style-type:none;list-style-position:inside;font-size:.8em}.legend li{height:1.25em;margin-bottom:.7em;padding-left:.5em;border-left:1.25em solid #000}.legend em{font-style:normal}.legend span{float:right;font-weight:700}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
